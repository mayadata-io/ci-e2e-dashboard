image: docker:stable
variables:
  # When using dind service we need to instruct docker, to talk with the
  # daemon started inside of the service. The daemon is available with
  # a network connection instead of the default /var/run/docker.sock socket.
  #
  # The 'docker' hostname is the alias of the service container as described at
  # https://docs.gitlab.com/ee/ci/docker/using_docker_images.html#accessing-the-services
  #
  # Note that if you're using Kubernetes executor, the variable should be set to
  # tcp://localhost:2375 because of how Kubernetes executor connects services
  # to the job container
  # When using dind, it's wise to use the overlayfs driver for
  # improved performance.
  DOCKER_DRIVER: overlay2
services:
- docker:dind

before_script:
- docker info
build-staging:
  stage: build 
  only:
  - staging
  script :
  - export REPO=mayadata/staging-dashboard-ci
  - export COMMIT=${CI_COMMIT_SHA:0:8}
  - docker login -u "$DOCKER_USER" -p "$DOCKER_PASS" && docker build --no-cache -t $REPO:$COMMIT . && docker push $REPO:$COMMIT
  - docker images
  - docker rmi $REPO:$COMMIT
  - docker images
build:
  stage: build
  script:
  - echo "Building-app"
  - export REPO=mayadata/dashboard-ci
  - export COMMIT=${CI_COMMIT_SHA:0:8}
  - docker login -u "$DOCKER_USER" -p "$DOCKER_PASS" && docker build -t $REPO:$COMMIT . 
  only:
  - master
  script :
  - export REPO=mayadata/dashboard-ci
  - export COMMIT=${CI_COMMIT_SHA:0:8}
  - docker login -u "$DOCKER_USER" -p "$DOCKER_PASS" && docker build --no-cache -t $REPO:$COMMIT . && docker push $REPO:$COMMIT
  - docker images
  - docker rmi $REPO:$COMMIT
  - docker images
